"""
Django settings for counseling_app project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import environ

import os
print(f"Environment DATABASE_URL: {os.getenv('DATABASE_URL', 'Not Set')}")


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0*m*5uh$uup)=&pni5g2q5cjd00yp%(r67i*$d#c9b*ty%-)gr'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'intake',
    'widget_tweaks',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'counseling_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'counseling_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# settings.py
LOGIN_URL = '/accounts/login/'  # Redirect unauthenticated users to login
LOGIN_REDIRECT_URL = '/'  # Redirect after successful login
LOGOUT_REDIRECT_URL = '/'  # Redirect after logout



env = environ.Env()
environ.Env.read_env(BASE_DIR / ".env")  # Use the correct path to your .env file

try:
    database_url = env('DATABASE_URL', default='Not Set')
    print(f"Loaded DATABASE_URL: {database_url}")
except Exception as e:
    print(f"Error loading DATABASE_URL: {str(e)}")
# Access FIELD_ENCRYPTION_KEY
FIELD_ENCRYPTION_KEY = env('FIELD_ENCRYPTION_KEY')

print(f"Loaded DATABASE_URL via environ: {env('DATABASE_URL', default='Not Set')}")
print(f"BASE_DIR: {BASE_DIR}")
print(f"Looking for .env at: {BASE_DIR / '.env'}")
print(f"File exists: {(BASE_DIR / '.env').exists()}")



DATABASES = {
    'default': env.db('DATABASE_URL', default='postgresql://user:password@host:port/dbname')
}


# DEBUG
DEBUG = env.bool('DEBUG', default=False)

# ALLOWED_HOSTS
ALLOWED_HOSTS = ['django-intake-production.up.railway.app', '127.0.0.1', 'localhost']

# Read the .env file


# Validate the key
if not FIELD_ENCRYPTION_KEY:
    raise ValueError("FIELD_ENCRYPTION_KEY is not set in the .env file")

PORT = int(os.getenv('PORT', 8080))
print(f"Loaded PORT: {PORT}")


CSRF_TRUSTED_ORIGINS = ['https://django-intake-production.up.railway.app']
